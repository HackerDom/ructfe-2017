- name: install basic packages for monitoring
  apt: name={{item}} state=latest
  with_items:
    - graphite-web
    - graphite-carbon
    - nginx
    - nginx-extras
    - uwsgi
    - uwsgi-plugin-python
    - adduser
    - libfontconfig  

- name: creates directory for carbon
  file: path=/home/graphite state=directory owner=_graphite group=_graphite
  notify: enable and restart carbon-cache

- name: tweak /etc/carbon/carbon.conf
  ini_file: dest=/etc/carbon/carbon.conf section=cache option={{item.option}} value={{item.value}}
  with_items:
    - {option: MAX_UPDATES_PER_SECOND, value: 100}
    - {option: USE_WHITELIST, value: True}
    - {option: MAX_CREATES_PER_MINUTE, value: 1000}
    - {option: STORAGE_DIR, value: "/home/graphite/"}
    - {option: LOCAL_DATA_DIR, value: "/home/graphite/whisper/"}
    - {option: ENABLE_UDP_LISTENER, value: True}
    - {option: UDP_RECEIVER_PORT, value: 40000}
  notify: enable and restart carbon-cache

- name: tweak /etc/carbon/storage-schemas.conf
  ini_file: dest=/etc/carbon/storage-schemas.conf section=default_1min_for_1day option={{item.option}} value={{item.value}}
  with_items:
    - {option: pattern, value: .*}
    - {option: retentions, value: "10s:14d"}
  notify: enable and restart carbon-cache

- name: copy /etc/default/graphite-carbon
  copy: content="CARBON_CACHE_ENABLED=true\n" dest=/etc/default/graphite-carbon
  notify: enable and restart carbon-cache

- name: place nginx config
  copy: src=default dest=/etc/nginx/sites-available/default
  notify: restart nginx

- name: copy htpasswd to /etc/nginx/htpasswd
  copy: src=htpasswd dest=/etc/nginx/htpasswd
  notify: restart nginx

- name: copy graphite.ini to uwsgi
  copy: src=graphite.ini dest=/etc/uwsgi/apps-available/graphite.ini
  notify: restart uwsgi

- name: link graphite.ini to uwsgi apps-enabled
  file: src=/etc/uwsgi/apps-available/graphite.ini dest=/etc/uwsgi/apps-enabled/graphite.ini state=link
  notify: restart uwsgi

- name: local_settings.py to uwsgi
  copy: src=local_settings.py dest=/etc/graphite/local_settings.py
  notify: restart uwsgi

# graphite db was created with: graphite-manage syncdb

- name: copy /home/graphite/graphite.db
  copy: src=graphite.db dest=/home/graphite/graphite.db owner=_graphite group=_graphite

- name: get grafana 4.6.2
  get_url: 
    url: https://s3-us-west-2.amazonaws.com/grafana-releases/release/grafana_4.6.2_amd64.deb
    dest: /root/grafana_4.6.2_amd64.deb

- name: install grafana 4.6.2
  apt: deb=/root/grafana_4.6.2_amd64.deb

- name: setup /etc/grafana/grafana.ini server
  ini_file: dest=/etc/grafana/grafana.ini section=server option={{item.option}} value={{item.value}}
  with_items:
    - {option: http_addr, value: "127.0.0.1"}
    - {option: root_url, value: "%(protocol)s://%(domain)s:%(http_port)s/g/"}
  notify: enable and restart grafana

- name: setup /etc/grafana/grafana.ini security
  ini_file: dest=/etc/grafana/grafana.ini section=security option={{item.option}} value={{item.value}}
  with_items:
    - {option: admin_user, value: mon}
    - {option: admin_password, value: "VjybnjhbyuTcnmCenm"}
  notify: enable and restart grafana

- name: setup /etc/grafana/grafana.ini users
  ini_file: dest=/etc/grafana/grafana.ini section=users option={{item.option}} value={{item.value}}
  with_items:
    - {option: allow_sign_up, value: false}
  notify: enable and restart grafana

# - name: copy /var/lib/grafana/grafana.db
#   copy: src=grafana.db dest=/var/lib/grafana/grafana.db owner=grafana group=grafana mode=0640
#   notify: enable and restart grafana  
